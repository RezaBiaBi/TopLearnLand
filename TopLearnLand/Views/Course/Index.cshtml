
@using TopLearnLand_DataLayer.Entities.Course
@model Tuple<List<TopLearnLand_Core.DTOs_ViewModels_.Courses.ShowCourseListItemViewModel>,int>
@{
    ViewData["Title"] = "Index";
}

<div class="container">
    <nav aria-label="breadcrumb">
        <ul class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">تاپ لرن</a></li>
            <li class="breadcrumb-item active"><a href="#">دوره ها</a></li>
            <li class="breadcrumb-item active" aria-current="page"> برنامه نویسی وب </li>
        </ul>
    </nav>
</div>


<div class="container">
    <form id="formFilter" action="/Course" method="get">
        <input id="PageId" name="PageId" type="hidden" value="@ViewData["PageId"].ToString()" />
        <section class="term-categories">
            <div class="top-bar">

                <header>
                    <h1> دوره های <span> برنامه نویسی وب </span> </h1> <span> @Model.Item1.Select(g=>g.CourseGroups).Count() دوره </span>
                </header>

                <div class="row">
                    <div class="col-md-4 col-sm-12 col-xs-12 pull-right">
                        <div class="input">
                            <input type="text" name="searchFilter" placeholder="موضوع مورد نظر ...">
                            <button><i class="zmdi zmdi-search"></i></button>
                        </div>
                    </div>
                    @{
                        string courseStatus = (string)ViewData["courseStatus"];
                        string orderBy = (string)ViewData["orderBy"];
                    }
                    <div class="col-md-4 col-sm-6 col-xs-12 pull-right">
                        <div class="switch-field available">
                            <input onchange="changeGroup()" id="available-filter-1" name="courseStatus" value="all" @((courseStatus == "all" ? "checked" : "")) type="radio">
                            <label for="available-filter-1"> همه </label>
                            <input onchange="changeGroup()" id="available-filter-2" name="courseStatus" value="buy" @((courseStatus == "buy" ? "checked" : "")) type="radio">
                            <label for="available-filter-2"> خریدنی </label>
                            <input onchange="changeGroup()" id="available-filter-3" name="courseStatus" value="free" @((courseStatus == "free" ? "checked" : "")) type="radio">
                            <label for="available-filter-3"> رایگان </label>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-6 col-xs-12 pull-left">
                        <div class="select-ddl">
                            <select>
                                <option onselect="changeGroup()" name="orderBy" value="price"> قیمت </option>
                                <option onselect="changeGroup()" name="orderBy" value="date"> تاریخ انتشار </option>
                                <option onselect="changeGroup()" name="orderBy" value="updatedate"> تاریخ بروزرسانی </option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">

                <aside class="col-lg-3 col-md-4 col-sm-12 col-xs-12">

                    <section class="aside-section filter-by-price">
                        <header>
                            <h3> فیلتر بر اساس قیمت </h3>
                        </header>
                        <div class="price-range">
                            <input onchange="changeGroup()" type="hidden" value="" id="min-value" name="startPrice">
                            <input onchange="changeGroup()" type="hidden" value="" id="max-value" name="endPrice">
                            <div class="price-bar">
                                <div id="priceFilter" class="noUi-target noUi-rtl noUi-horizontal">

                                </div>
                            </div>
                            <div class="max-price">تا <span id="max-text">100000</span> تومان</div>
                            <div class="min-price">از <span id="min-text">20000</span> تومان</div>
                            <div class="clearfix"></div>
                        </div>
                    </section>

                    <section class="aside-section filter-by-category">
                        <header>
                            <h3> دسته بندی موضوعات </h3>
                        </header>
                        <div class="inner">
                            <ul>
                                @{
                                    List<CourseGroup> courseGroups = (List<CourseGroup>)ViewData["CourseGroups"];
                                    List<int> selectedGroups = (List<int>)ViewData["selectedGroups"];
                                }
                                @foreach (var courseGroup in courseGroups.Where(g => g.ParentId == null))
                                {
                                    <li>
                                        <input onchange="changeGroup()" type="checkbox" name="selectedGroups" value="@courseGroup.CourseGroupId" @((selectedGroups.Any(g => g == courseGroup.CourseGroupId) ? "checked" : "")) id="cat-1">
                                        <label for="cat-1"> @courseGroup.GroupTitle </label>
                                        @if (courseGroups.Any(g => g.ParentId == courseGroup.CourseGroupId))
                                        {
                                            <ul>
                                                @foreach (var subGroup in courseGroups.Where(g => g.ParentId == courseGroup.CourseGroupId))
                                                {
                                                    <li>
                                                        <input onchange="changeGroup()" type="checkbox" name="selectedGroups" value="@subGroup.CourseGroupId" @((selectedGroups.Any(g => g == subGroup.CourseGroupId) ? "checked" : "")) id="cat-1">
                                                        <label for="cat-1"> @subGroup.GroupTitle </label>
                                                    </li>
                                                }
                                            </ul>
                                        }
                                    </li>
                                }
                            </ul>
                        </div>
                    </section>

                </aside>

                <div class="col-lg-9 col-md-8 col-sm-12 col-xs-12">

                    <section class="terms-items">
                        <div class="row">
                            @foreach (var model in Model.Item1)
                            {
                                <partial name="_BoxCourse" model="model" />
                            }
                        </div>
                        @if (Model.Item2 > 1)
                        {
                            <nav aria-label="Page navigation">
                                <ul class="pagination justify-content-center">
                                    <li class="page-item">
                                        <a class="page-link" href="#" aria-label="Previous">
                                            <span aria-hidden="true"><i class="zmdi zmdi-chevron-right"></i></span>
                                        </a>
                                    </li>
                                    @for (int i = 1; i <= Model.Item2; i++)
                                    {
                                        <li class="page-item"><a class="page-link" onclick="changePage(@i)" href="#">@i</a></li>
                                    }
                                    <li class="page-item">
                                        <a class="page-link" href="#" aria-label="Next">
                                            <span aria-hidden="true"><i class="zmdi zmdi-chevron-left"></i></span>
                                        </a>
                                    </li>
                                </ul>
                            </nav>
                        }
                    </section>

                </div>
            </div>
        </section>

    </form>
</div>

@section Scripts{
    <script src="/css/noUiSlider/nouislider.min.js"></script>
    <script src="/js/script.js"></script>
    <script type="text/javascript">
        $(function () {

            

            var slider = document.getElementById('priceFilter');
            noUiSlider.create(slider, {
                start: [20000, 100000],
                step: 5000,
                connect: true,
                direction: 'rtl',
                range: {
                    'min': 20000,
                    'max': 100000
                }
            });

            var marginMin = document.getElementById('min-text'),
                marginMax = document.getElementById('max-text');

            slider.noUiSlider.on('update', function (values, handle) {
                var xvalue = Math.round(values[handle]);
                if (handle) {
                    marginMax.innerHTML = xvalue;
                } else {
                    marginMin.innerHTML = xvalue;
                }
                //console.log(values[handle]);
            });

            slider.noUiSlider.on('change', function (values, handle) {
                var xvalue = Math.round(values[handle]);
                if (handle) {
                    // setGetParameter('max_price', xvalue);
                    $('#max-value').val(xvalue);
                } else {
                    // setGetParameter('min_price', xvalue);
                    $('#min-value').val(xvalue);
                }
            });


            slider.noUiSlider.on('slide', function (values, handle) {

                console.log(values[0]);
                console.log(values[1]);

                var xvalue = Math.round(values[handle]);
                //updateSliderRange( Math.round(values[0]), Math.round(values[1]) );
            });


            function updateSliderRange(min, max) {
                slider.noUiSlider.updateOptions({
                    range: {
                        'min': min,
                        'max': max
                    }
                });
            }
        });

        function changePage(pageId) {
            $("#PageId").val(pageId);
            $("#formFilter").submit();
        }

        function changeGroup() {
            $("#formFilter").submit();
        }
    </script>
}